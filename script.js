// Curse Project - Modern Web Interface JavaScriptnn// Global data arraynlet dataArray = [1, 2, 3, 4, 5];nn// Initialize the applicationndocument.addEventListener('DOMContentLoaded', function() {n    updateTime();n    updateDisplay();n    setInterval(updateTime, 1000);n    n    // Add enter key support for inputn    document.getElementById('newData').addEventListener('keypress', function(e) {n        if (e.key === 'Enter') {n            addData();n        }n    });n});nn// Update current timenfunction updateTime() {n    const now = new Date();n    document.getElementById('currentTime').textContent = now.toLocaleString();n}nn// Update all displaysnfunction updateDisplay() {n    if (dataArray.length === 0) {n        document.getElementById('sampleData').textContent = '[]';n        document.getElementById('dataSum').textContent = '0';n        document.getElementById('dataAvg').textContent = '0';n        document.getElementById('dataCount').textContent = '0';n        document.getElementById('dataMin').textContent = 'N/A';n        document.getElementById('dataMax').textContent = 'N/A';n        document.getElementById('dataRange').textContent = 'N/A';n        return;n    }n    n    document.getElementById('sampleData').textContent = JSON.stringify(dataArray);n    document.getElementById('dataSum').textContent = dataArray.reduce((a, b) => a + b, 0);n    document.getElementById('dataAvg').textContent = (dataArray.reduce((a, b) => a + b, 0) / dataArray.length).toFixed(2);n    document.getElementById('dataCount').textContent = dataArray.length;n    document.getElementById('dataMin').textContent = Math.min(...dataArray);n    document.getElementById('dataMax').textContent = Math.max(...dataArray);n    document.getElementById('dataRange').textContent = Math.max(...dataArray) - Math.min(...dataArray);n    n    // Update last modified timen    updateLastModified();n}nn// Update last modified timenfunction updateLastModified() {n    const now = new Date();n    const timeString = now.toLocaleTimeString();n    document.getElementById('lastModified').textContent = timeString;n}nn// Refresh datanfunction updateData() {n    showLoading(true);n    setTimeout(() => {n        updateDisplay();n        showLoading(false);n        showAlert('Data refreshed successfully!', 'success');n    }, 1000);n}nn// Generate random datanfunction generateRandomData() {n    showLoading(true);n    setTimeout(() => {n        dataArray = Array.from({length: 8}, () => Math.floor(Math.random() * 100) + 1);n        updateDisplay();n        showLoading(false);n        showAlert('Random data generated!', 'success');n    }, 1500);n}nn// Add new datanfunction addData() {n    const input = document.getElementById('newData');n    const value = parseInt(input.value);n    n    if (isNaN(value)) {n        showAlert('Please enter a valid number!', 'error');n        input.focus();n        return;n    }n    n    dataArray.push(value);n    updateDisplay();n    input.value = '';n    showAlert(`Added ${value} to dataset!`, 'success');n}nn// Clear all datanfunction clearData() {n    if (confirm('Are you sure you want to clear all data?')) {n        dataArray = [];n        updateDisplay();n        showAlert('All data cleared!', 'success');n    }n}nn// Sort datanfunction sortData() {n    if (dataArray.length === 0) {n        showAlert('No data to sort!', 'error');n        return;n    }n    n    dataArray.sort((a, b) => a - b);n    updateDisplay();n    showAlert('Data sorted in ascending order!', 'success');n}nn// Reverse datanfunction reverseData() {n    if (dataArray.length === 0) {n        showAlert('No data to reverse!', 'error');n        return;n    }n    n    dataArray.reverse();n    updateDisplay();n    showAlert('Data order reversed!', 'success');n}nn// Show/hide loading spinnernfunction showLoading(show) {n    document.getElementById('loading').style.display = show ? 'block' : 'none';n}nn// Show alert messagesnfunction showAlert(message, type) {n    const alert = document.getElementById('alert');n    alert.textContent = message;n    alert.className = `alert ${type}`;n    alert.style.display = 'block';n    n    setTimeout(() => {n        alert.style.display = 'none';n    }, 3000);n}nn// Export data functionalitynfunction exportData() {n    if (dataArray.length === 0) {n        showAlert('No data to export!', 'error');n        return;n    }n    n    const dataStr = JSON.stringify(dataArray, null, 2);n    const dataBlob = new Blob([dataStr], {type: 'application/json'});n    const url = URL.createObjectURL(dataBlob);n    n    const link = document.createElement('a');n    link.href = url;n    link.download = 'curse-data.json';n    document.body.appendChild(link);n    link.click();n    document.body.removeChild(link);n    URL.revokeObjectURL(url);n    n    showAlert('Data exported successfully!', 'success');n}nn// Import data functionalitynfunction importData() {n    const input = document.createElement('input');n    input.type = 'file';n    input.accept = '.json';n    n    input.onchange = function(e) {n        const file = e.target.files[0];n        if (file) {n            const reader = new FileReader();n            reader.onload = function(e) {n                try {n                    const importedData = JSON.parse(e.target.result);n                    if (Array.isArray(importedData)) {n                        dataArray = importedData;n                        updateDisplay();n                        showAlert('Data imported successfully!', 'success');n                    } else {n                        showAlert('Invalid data format!', 'error');n                    }n                } catch (error) {n                    showAlert('Error reading file!', 'error');n                }n            };n            reader.readAsText(file);n        }n    };n    n    input.click();n}nn// Keyboard shortcutsndocument.addEventListener('keydown', function(e) {n    if (e.ctrlKey || e.metaKey) {n        switch(e.key) {n            case 'r':n                e.preventDefault();n                updateData();n                break;n            case 'n':n                e.preventDefault();n                document.getElementById('newData').focus();n                break;n            case 's':n                e.preventDefault();n                sortData();n                break;n            case 'e':n                e.preventDefault();n                exportData();n                break;n            case 'i':n                e.preventDefault();n                importData();n                break;n        }n    }n});nn// Add some fun animationsnfunction addPulseEffect(element) {n    element.style.animation = 'pulse 0.5s ease-in-out';n    setTimeout(() => {n        element.style.animation = '';n    }, 500);n}nn// Add pulse animation to CSSnconst style = document.createElement('style');nstyle.textContent = `n    @keyframes pulse {n        0% { transform: scale(1); }n        50% { transform: scale(1.05); }n        100% { transform: scale(1); }n    }n`;ndocument.head.appendChild(style);